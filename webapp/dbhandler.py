from pymongo import MongoClient
from settings import DATABASE_NAME as __dbname__
from settings import COLLECTION_NAME as __collection__
import copy


def connect_to_mongodb(__dbname__, __collection__):
    try:
        connection = MongoClient('localhost', 27017)
        db = connection[__dbname__]
        collection = db[__collection__]
        print("Connection to MongoDB successful")
        return collection
    except Exception as e:
        print("Unable to establish connection to MongoDB reason = %s" %(e))

class MongoHandler(object):
    def __init__(self):
        self.col_obj = connect_to_mongodb(__dbname__, __collection__)

    def get_data(self, full_name):
        output_obj = self.col_obj.find({"full_name": full_name})
        doc = output_obj.next()
        if doc:
            return doc['commit_ids']
        else:
            return {}

    def update_data(self, full_name, sha, vul_cnt):
        output_obj = self.col_obj.find({"full_name": full_name})
        old_data = output_obj.next()
        # print "olddata = ", old_data
        if old_data:
            old_data['commit_ids'][sha] = {'vul_cnt': vul_cnt}
            new_data = copy.copy(old_data)
            new_data.pop('_id')
            self.col_obj.update({"_id": old_data['_id']}, new_data, upsert=True)
        else:
            new_data = {
            'full_name': full_name,
            'commit_ids': {sha:  {"vul_cnt": vul_cnt}}
            }
            self.col_obj.create(new_data)

data =  {
    'full_name': "naman-kumar/TestComment",
    'commit_ids': {
        '3e5a918e96e9d00abe655dcf2bcc770a05ae9700': {'vul_cnt': 1},
        'a721616020946e9bdd7f6e56ea8a76a0d36ecd8b': {'vul_cnt': 1},
        'a721616020946e9bdd7f6e56ea8a76a0dcd8berd': {'vul_cnt': 5},
    }
}

if __name__ == '__main__':
    full_name = 'naman-kumar/TestComment'
    sha = 'aaaaaa721616020946e9bdd7f6e56ea8a76a0dcd8berd'
    vul_cnt = 15
    MH = MongoHandler()
    MH.update_data(full_name, sha, vul_cnt)
    #print MH.get_data(full_name)