import requests
from config import access_token as __access_token__
from config import git_url as __url__
import json


class Githandler(object):
    """
    This class is used to handle git api
    """
    def __init__(self):
        self.__access_token__ = __access_token__
        self.__url__ = __url__

    def commit_reader(self, sha, full_name):
        cmd = "{0}/repos/{1}/commits/{2}?access_token={3}".format(self.__url__, full_name, sha, self.__access_token__)
        output = requests.get(cmd)
        if output.status_code == 200:
            json_output = output.json()
            return json_output.get("files")[0]
        else:
            return 'Could not fetch, reason: %s' % output.text

    def commenter(self, line_no, msg, sha, relative_file_path, full_name):
        git_url = "{0}/repos/{1}/commits/{2}/comments?access_token={3}".format(self.__url__, full_name,
                                                                               sha, self.__access_token__)
        data = {"body": msg,
                "path": relative_file_path,
                "position": line_no
                }
        output = requests.post(git_url, data=json.dumps(data))
        if not output.status_code == 201:
            print('Could not comment, reason: %s' % output.text)

    def get_commits_sha(self, pull_no, full_name):
        cmd = "{0}/repos/{1}/pulls/1/commits?access_token={2}".format(self.__url__, full_name, self.__access_token__)
        output = requests.get(cmd)
        if output.status_code == 200:
            data_list = []
            json_output = output.json()
            for data in json_output:
                data_list.append(data.get("sha"))
            return data_list
        else:
            return 'Could not fetch, reason: %s' % output.text
if __name__ == '__main__':
    full_name = "naman-kumar/TestComment"
    pull_no = 1
    a = Githandler()
    output = a.get_commits_sha(pull_no, full_name)
    print output